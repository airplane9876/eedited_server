/user/{userId}/follow:
  patch:
    tags:
      - /user
    summary: loggedIn user follows userId
    parameters:
      - in : path
        name: userId
        schema:
          type: string
        description: userId
    responses:
      '200':
        $ref: './openapi.yaml#/components/responses/successResponse'
      '404':
        allOf:
          - $ref: './openapi.yaml#/components/responses/notFoundResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    info:
                      type: string
                      example: /:userId/like user not found
      '500':
        allOf:
          - $ref: './openapi.yaml#/components/responses/routerErrorResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    info:
                      type: string
                      example: /user/${userId}/follow router error

/user/{userId}:
  get:
    tags:
      - /user
    summary: get a user's all of info with videos, tags, follows, etc.
    description:
      유저정보를 확인할 수 있는 라우터입니다.<br>
      위쪽은 딱 봐도 유저정보<br>
      Video에는 해당 유저가 업로드한 영상이 array형태로 담겨 나옵니다.<br>
      여기서 현재 로그인한 유저가 좋아요를 누른 영상의 경우 WhatVideoUpload 에 있는 liker에 현재 로그인한 유저의 아이디가 담겨서 나옵니다.<br>
      followFrom은 현재 보고있는 프로필에 해당하는 유저가 팔로우한 목록입니다.<br>
      followTo는 현재 로그인한 유저가 프로필에 해당하는 유저를 팔로우한 경우 followerId에 현재 로그인한 유저의 아이디가 담겨서 나옵니다.
    parameters:
      - in : path
        name: userId
        schema:
          type: string
        description: userId
    responses:
      '200 and LoggedIn':
        allOf:
          - $ref: './openapi.yaml#/components/responses/successResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    userId:
                      type: string
                    password:
                      type: string
                    birthday:
                      type: string
                      format: date
                    nickname:
                      type: string
                    email:
                      type: string
                      format: email
                    profilePicture:
                      type: string
                      format: uri
                    followerCnt:
                      type: integer
                      minimum: 0
                    uploadVideoCnt:
                      type: integer
                      minimum: 0
                    proTag:
                      type: boolean
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    deletedAt:
                      type: string
                      format: date-time
                    Video:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          uploader:
                            type: string
                          title:
                            type: string
                          discription:
                            type: string
                          url:
                            type: string
                            format: uri
                          thumbnail:
                            type: string
                            format: uri
                          likeCnt:
                            type: integer
                            minimum: 0
                          viewCnt:
                            type: integer
                            minimum: 0
                          createdAt:
                            type: string
                            format: date-time
                          updatedAt:
                            type: string
                            format: date-time
                          deletedAt:
                            type: string
                            format: date-time
                          WhatVideoUpload:
                            type: array
                            items:
                              type: object
                              properties:
                                liker:
                                  type: string
                    followFrom:
                      type: array
                      items:
                        type: object
                        properties:
                          followingId:
                            type: string
                    followTo:
                      type: array
                      items:
                        type: object
                        properties:
                          followerId:
                            type: string
                    categories:
                      type: array
                      items:
                        type: object
                        properties:
                          categoryName:
                            type: string
      '200 and not LoggedIn':
        allOf:
          - $ref: './openapi.yaml#/components/responses/successResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    userId:
                      type: string
                    password:
                      type: string
                    birthday:
                      type: string
                      format: date
                    nickname:
                      type: string
                    email:
                      type: string
                      format: email
                    profilePicture:
                      type: string
                      format: uri
                    followerCnt:
                      type: integer
                      minimum: 0
                    uploadVideoCnt:
                      type: integer
                      minimum: 0
                    proTag:
                      type: boolean
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    deletedAt:
                      type: string
                      format: date-time
                    Video:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          uploader:
                            type: string
                          title:
                            type: string
                          discription:
                            type: string
                          url:
                            type: string
                            format: uri
                          thumbnail:
                            type: string
                            format: uri
                          likeCnt:
                            type: integer
                            minimum: 0
                          viewCnt:
                            type: integer
                            minimum: 0
                          createdAt:
                            type: string
                            format: date-time
                          updatedAt:
                            type: string
                            format: date-time
                          deletedAt:
                            type: string
                            format: date-time
                    followFrom:
                      type: array
                      items:
                        type: object
                        properties:
                          followingId:
                            type: string
                    categories:
                      type: array
                      items:
                        type: object
                        properties:
                          categoryName:
                            type: string
      '500':
        allOf:
          - $ref: './openapi.yaml#/components/responses/routerErrorResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    info:
                      type: string
                      example: /user/${userId} router error

/user/change:
  patch:
    tags:
      - /user
    summary: change user's info
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
              nickname:
                type: string
              profilePicture:
                type: string
    responses:
      '200':
        $ref: './openapi.yaml#/components/responses/successResponse'
      '404':
        allOf:
          - $ref: './openapi.yaml#/components/responses/notFoundResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    info:
                      type: string
                      example: '/user/change - DB : exists User of (nickname)'
      '500':
        allOf:
          - $ref: './openapi.yaml#/components/responses/routerErrorResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    info:
                      type: string
                      example: /user/change router error
      
/user/discomfort:
  post:
    tags:
      - /user
    summary: 건의사항을 보내는 라우터
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
    responses:
      '200':
        $ref: './openapi.yaml#/components/responses/successResponse'
      '500':
        allOf:
          - $ref: './openapi.yaml#/components/responses/routerErrorResponse'
          - content:
              application/json:
                schema:
                  type: object
                  properties:
                    info:
                      type: string
                      example: /user/discomfort - nodemaileError